name: tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    container:
      image: rust:1.82-bookworm
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - run: |
          rustup component add rustfmt
          cargo fmt --all -- --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    container:
      image: rust:1.82-bookworm
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 #v2.7.3
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af #v0.0.5
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - run: |
          rustup component add clippy
          # Temporarily allowing dead-code, while denying all other warnings
          cargo clippy --all-features --all-targets -- -A dead-code -D warnings

  test:
    name: cargo test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
    container:
      image: rust:1.82-bookworm
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 #v2.7.3
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af #v0.0.5
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Run tests
        run: cargo test --all-features --workspace

  # Cannot do with llvm-cov, see https://github.com/taiki-e/cargo-llvm-cov/issues/2
  test-docs:
    name: cargo test docs code snippets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
    container:
      image: rust:1.82-bookworm
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 #v2.7.3
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af #v0.0.5
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Test documentation code snippets
        run: cargo test --doc --all-features --workspace

  build:
    name: cargo check
    runs-on: ubuntu-latest
    container:
      image: rust:1.82-bookworm
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Cache dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 #v2.7.3
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af #v0.0.5
        if: ${{ !startsWith(github.head_ref, 'renovate/') }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Cargo check
        run: cargo check

  release-check:
    name: release-please dry-run
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install release-please CLI
        run: npm install -g release-please

      - name: Run release-please dry-run
        run: |
          release-please release-pr \
            --repo-url=semiotic-ai/veemon \
            --token=${{ secrets.GITHUB_TOKEN }} \
            --manifest-file .release-please-manifest.json \
            --target-branch=${{ github.head_ref }} \
            --dry-run

